// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/ClawGrab.h"
#include "Commands/ClawMove.h"
#include "Commands/DriveRobot.h"
#include "Commands/EjectGrippyWheels.h"
#include "Commands/MagazineEject.h"
#include "Commands/MagazineRachet.h"
#include "Commands/MagazineReset.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	joystick2 = new Joystick(1);
	
	joystick1 = new Joystick(0);
	
     

        // SmartDashboard Buttons
	SmartDashboard::PutData("ClawGrab", new ClawGrab());

	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

	SmartDashboard::PutData("DriveRobot", new DriveRobot());

	SmartDashboard::PutData("EjectGrippyWheels", new EjectGrippyWheels());

	SmartDashboard::PutData("MagazineRachet", new MagazineRachet());

	SmartDashboard::PutData("MagazineEject", new MagazineEject());

	SmartDashboard::PutData("ClawMove", new ClawMove());

	SmartDashboard::PutData("MagazineReset", new MagazineReset());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

Joystick* OI::getJoystick2() {
	return joystick2;
}

Joystick* OI::getJoystick1() {
	return joystick1;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

float OI::GetX() {
	return joystick1->GetRawAxis(1);
}

float OI::GetY() {
	return joystick1->GetRawAxis(2);
}

float OI::GetR() {
	return joystick1->GetTwist();
}

